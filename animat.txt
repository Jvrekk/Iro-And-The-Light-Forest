#pragma once


#ifndef IRO_IN_THE_DARK_CHAMBER_ANIMATION_H
#define IRO_IN_THE_DARK_CHAMBER_ANIMATION_H
#include <SFML\Graphics.hpp>

class Animation{
public:
	Animation(sf::Texture* texture, sf::Vector2u imageCount, float switchTime);
	~Animation();

	void update(int row, float deltaTime);

	sf::IntRect uvRect;

private:
	sf::Vector2u imageCount;
	sf::Vector2u currentImage;

	float totalTime;
	float switchTime;



};
#endif // IRO_IN_THE_DARK_CHAMBER_ANIMATION_H


#include "Animation.h"

Animation::Animation(sf::Texture * texture, sf::Vector2u imageCount, float switchTime){

	this->imageCount = imageCount;
	this->switchTime = switchTime;
	totalTime = 0.0f;
	currentImage.x = 0;

	uvRect.width = texture->getSize().x / float(imageCount.x);
	uvRect.height = texture->getSize().y / float(imageCount.y);
}

Animation::~Animation(){
}

void Animation::update(int row, float deltaTime)
{
	currentImage.y = row;
	totalTime += deltaTime;
	
	if (totalTime >= switchTime) {
		totalTime -= switchTime;
		currentImage.x++;
		if (currentImage.x >= imageCount.x) {
			currentImage.x = 0;
		}
	}

	uvRect.left = currentImage.x * uvRect.width;
	uvRect.top = currentImage.y * uvRect.height;
}
